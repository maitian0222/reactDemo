{"version":3,"sources":["component/context/DynamicThemeFunction.tsx"],"names":["themes","light","foreground","background","dark","ThemeContext","__WEBPACK_IMPORTED_MODULE_1_react__","theme","toggleTheme","BaseThemeContextt","_super","props","_this","call","this","setState","prevState","state","__WEBPACK_IMPORTED_MODULE_0_tslib__","prototype","render","Provider","value","ToolBar","ThemeButton","Consumer","_a","__WEBPACK_IMPORTED_MODULE_2_antd_es_button__","type","onClick","style","backgroundColor","color"],"mappings":"8KAGaA,UACXC,OACEC,WAAY,UACZC,WAAY,WAEdC,MACEF,WAAY,UACZC,WAAY,aAIVE,EAAeC,EAAA,eACnBC,MAAOP,EAAOI,KACdI,YAAa,eAEfC,EAAA,SAAAC,GACE,SAAAD,EAAYE,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YAMPF,EAAAJ,YAAc,WACnBI,EAAKG,SAAS,SAACC,GACb,OACET,MAAOS,EAAUT,QAAUP,EAAOI,KAAOJ,EAAOC,MAAQD,EAAOI,SARnEQ,EAAKK,OACHV,MAAOP,EAAOC,SAuBpB,OA3B+CiB,EAAA,EAAAT,EAAAC,GAetCD,EAAAU,UAAAC,OAAP,WACE,OACEd,EAAA,cAACD,EAAagB,UACZC,OACEf,MAAOO,KAAKG,MAAMV,MAClBC,YAAaM,KAAKN,cAGpBF,EAAA,cAACiB,EAAO,QAIhBd,EA3BA,CAA+CH,EAAA,eA6B/C,SAASiB,EAAQZ,GACf,OAAOL,EAAA,cAACkB,EAAW,MAGrB,SAASA,EAAYb,GACnB,OACEL,EAAA,cAACD,EAAaoB,SAAQ,KACnB,SAACC,OAAEnB,EAAAmB,EAAAnB,MAAOC,EAAAkB,EAAAlB,YAAkB,OAC3BF,EAAA,cAACA,EAAA,SAAc,KACbA,EAAA,cAACqB,EAAA,GACCC,KAAK,UACLC,QAASrB,EACTsB,OACEC,gBAAiBxB,EAAMJ,WACvB6B,MAAOzB,EAAML,aACd","file":"static/js/0.8540482b.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Button } from 'antd';\n\nexport const themes = {\n  light: {\n    foreground: '#ffffff',\n    background: '#222222',\n  },\n  dark: {\n    foreground: '#000000',\n    background: '#eeeeee',\n  },\n};\n\nconst ThemeContext = React.createContext({\n  theme: themes.dark,\n  toggleTheme: () => {},\n}); // 默认值;\nexport default class BaseThemeContextt extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: themes.light,\n    };\n  }\n\n  public toggleTheme = () => {\n    this.setState((prevState) => {\n      return {\n        theme: prevState.theme === themes.dark ? themes.light : themes.dark,\n      };\n    });\n  };\n  public render() {\n    return (\n      <ThemeContext.Provider\n        value={{\n          theme: this.state.theme,\n          toggleTheme: this.toggleTheme,\n        }}\n      >\n        <ToolBar />\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nfunction ToolBar(props) {\n  return <ThemeButton />;\n}\n\nfunction ThemeButton(props) {\n  return (\n    <ThemeContext.Consumer>\n      {({ theme, toggleTheme }) => (\n        <React.Fragment>\n          <Button\n            type=\"primary\"\n            onClick={toggleTheme}\n            style={{\n              backgroundColor: theme.background,\n              color: theme.foreground,\n            }}\n          >\n            改变主题色\n          </Button>\n        </React.Fragment>\n      )}\n    </ThemeContext.Consumer>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/context/DynamicThemeFunction.tsx"],"sourceRoot":""}